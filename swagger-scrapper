#!/usr/bin/phantomjs --ssl-protocol=any --ignore-ssl-errors=true --web-security=false
// vim: set ft=javascript:
'use strict';

var system = require('system');
var _ = require('lodash');
var webpage = require('webpage');

var debugMode = false;

var page = webpage.create();
page.settings.loadImages = false;
page.settings.userAgent = 'Mozilla/5.0 (Windows NT 6.1; rv:31.0) Gecko/20100101 Firefox/31.0';

if (debugMode) {
  page.onConsoleMessage = function(msg) {
  console.log('> ' + msg);
  }
}
else {
  //Suppress calltraces from page
  page.onError = function () {}
}

var urls = _.drop(system.args);
function run() {
  if (_.isEmpty(urls)) {
    phantom.exit(0);
    return;
  }

  processURL(urls.shift(), run);
}
run();

function processURL(url, cb) {
  console.log(url);
  page.open(url, function(status) {
    var swagger = scrapePage();

    //if (_.isUndefined(swagger))
    //  phantom.exit(255);
    console.log(swagger);
    cb();
  });
}

function scrapePage() {
  var swagger = scrapeSwaggerUi();

  for (var i = 0; i < page.framesCount; ++i) {
    page.switchToChildFrame(i);
    var result = scrapeSwaggerUi();
    page.switchToParentFrame();

    if (result) {
      if (swagger)
        throw 'duplicate swaggerUi';
      swagger = result;
    }
  }
  return swagger;
}

function scrapeSwaggerUi() {
  return page.evaluate(function() {
    if (!window.swaggerUi) {
      console.log('missing swaggerUi');
      return;
    }
    var options = window.swaggerUi.options;
    console.log('options:' + options);
    return options.url || options.discoveryUrl;
  });
}
