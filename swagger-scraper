#!/usr/bin/env node
'use strict';

var execFile = require('child_process').execFile;
var URI = require('URIjs');
var request = require('request');
var assert = require('assert');
var phantomjs = require('phantomjs').path;

var url = process.argv[2];
scrape(url, function (data) {
  processSwagger(data, processResult);
});

function scrape(url, cb) {
  console.log(url);
  var args = [
    '--ssl-protocol=any',
    '--ignore-ssl-errors=true',
    '--web-security=false',
    __dirname + '/scraper.js',
    url
  ];
  execFile(phantomjs, args, function(err, stdout, stderr) {
    if (err) throw err;

    // Sometimes an error in the loaded page's JavaScript doesn't get picked up or thrown?
    // But the error comes in via stdout and causes JSON parsing to break
    try {
        var data = JSON.parse(stdout);
    } catch(err) {
        log('Whoops! Seems there was an error? You\'ll find the stack trace below.');
        console.log(stdout);
        error(err);
    }
    cb(data);
  });
}

function processResult(data) {
  console.log(JSON.stringify(data));
}

function processSwagger(data, cb) {
  if (data.swagger) {
    var uri = new URI(data.swagger);
    if (uri.is('relative'))
      data.swagger = uri.absoluteTo(data.url).toString();
  }
  cb(data);
}

function log(message) {
    process.stdout.write(message + '\n');
}

function error(err) {
    process.stderr.write(err);
}
